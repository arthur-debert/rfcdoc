Implementation Plan for TxtDoc Format v2 (.rfc) - Syntax Changes
-----------------------------------------------------------------

This document outlines the implementation plan for the syntax changes required
to support the v2 format for .rfc files as defined in 'docs/format.rfc.txt'.

1. Overview
   
   The v2 format introduces several new syntax features and changes to the
   existing format. This implementation will completely replace the current
   implementation for .rfc files with no backward compatibility required.

2. Syntax Changes Analysis
   
   The key differences between the current format and the v2 format include:
   
   2.1 New Syntax Features
   
       - Bold text with *asterisks*
       - Improved section formatting
       - Consistent indentation rules
   
   2.2 New Session Types
   
       - Formal Session Declaration (title with dashes)
       - Numbered Session Declaration (1. Session Name)
       - Alternative Declaration (: Session Name)
   
   2.3 Advanced Features
   
       - References to documents/sections
       - Footnotes
       - Metadata headers
       - Document title
       - Table of contents

3. Implementation Plan: Syntax and Language Features
   
   3.1 Update Language Configuration
   
       Changes needed to language-configuration.json:
       
       - Add * to autoClosingPairs and surroundingPairs
       - Update folding markers to recognize new session types
       - Update indentation rules for consistent formatting
       
       Current autoClosingPairs:
       "autoClosingPairs": [["_", "_"]]
       
       Updated autoClosingPairs:
       "autoClosingPairs": [["_", "_"], ["*", "*"]]
       
       Current surroundingPairs:
       "surroundingPairs": [["_", "_"], [">", ""]]
       
       Updated surroundingPairs:
       "surroundingPairs": [["_", "_"], ["*", "*"], [">", ""]]
       
       Current folding markers:
       "folding": {
         "markers": {
           "start": "^([A-Za-z0-9].*$\\n^-+$|^[A-Z][^\\n]*$|^\\s{4})",
           "end": "^(?!\\s{4})$"
         }
       }
       
       Updated folding markers:
       "folding": {
         "markers": {
           "start": "^([A-Za-z0-9].*$\\n^-+$|^[0-9]+\\.[0-9]* [^\\n]*$|^: [^\\n]*$|^[A-Z][^\\n]*$|^\\s{4})",
           "end": "^(?!\\s{4})$"
         }
       }
   
   3.2 Update Syntax Highlighting
   
       Changes needed to syntaxes/txtdoc.tmLanguage.json:
       
       - Update existing patterns for titles, sections, lists
       - Add new patterns for:
         - Bold text (*text*)
         - Numbered sessions (1. Session Name)
         - Alternative sessions (: Session Name)
         - Footnotes ([1] Footnote text)
         - References (see: path#anchor-id)
         - Metadata headers (key-value pairs)
       
       New patterns to add:
       
       Bold text pattern:
       {
         "match": "\\*(.*?)\\*",
         "captures": {
           "1": {
             "name": "markup.bold.txtdoc"
           }
         }
       }
       
       Numbered session pattern:
       {
         "match": "^([0-9]+(?:\\.[0-9]+)*)\\. ([^\\n]*)$",
         "name": "meta.section.numbered.txtdoc",
         "captures": {
           "1": {
             "name": "entity.name.section.number.txtdoc"
           },
           "2": {
             "name": "entity.name.section.title.txtdoc"
           }
         }
       }
       
       Alternative session pattern:
       {
         "match": "^: ([^\\n]*)$",
         "name": "meta.section.alternative.txtdoc",
         "captures": {
           "1": {
             "name": "entity.name.section.txtdoc"
           }
         }
       }
       
       Footnote reference pattern:
       {
         "match": "\\[(\\d+)\\]",
         "name": "meta.footnote.reference.txtdoc",
         "captures": {
           "1": {
             "name": "constant.numeric.footnote.txtdoc"
           }
         }
       }
       
       Footnote declaration pattern:
       {
         "match": "^\\[(\\d+)\\] (.+)$",
         "name": "meta.footnote.declaration.txtdoc",
         "captures": {
           "1": {
             "name": "constant.numeric.footnote.txtdoc"
           },
           "2": {
             "name": "markup.quote.footnote.txtdoc"
           }
         }
       }
       
       Reference pattern:
       {
         "match": "see: ([^#\\s]+)(?:#([\\w-]+))?",
         "name": "meta.reference.txtdoc",
         "captures": {
           "1": {
             "name": "string.unquoted.reference.path.txtdoc"
           },
           "2": {
             "name": "string.unquoted.reference.anchor.txtdoc"
           }
         }
       }
       
       Metadata header pattern:
       {
         "match": "^([A-Za-z0-9 ]+)\\s{2,}(.+)$",
         "name": "meta.metadata.txtdoc",
         "captures": {
           "1": {
             "name": "variable.parameter.metadata.key.txtdoc"
           },
           "2": {
             "name": "string.unquoted.metadata.value.txtdoc"
           }
         }
       }
   
   3.3 Update Document Symbol Provider
   
       Changes needed to TxtDocDocumentSymbolProvider class in extension.js:
       
       - Update section detection regex
       - Add support for numbered sessions
       - Add support for alternative sessions
       - Add support for footnotes in the outline view
       
       Current section regex:
       const SECTION_REGEX = /^([A-Z][^\n]*)$/gm;
       
       New regex constants to add:
       const NUMBERED_SECTION_REGEX = /^([0-9]+(?:\.[0-9]+)*)\. ([^\n]*)$/gm;
       const ALTERNATIVE_SECTION_REGEX = /^: ([^\n]*)$/gm;
       const FOOTNOTE_REGEX = /^\[(\d+)\] (.+)$/gm;
       
       Update the provideDocumentSymbols method to include these new section types
       and add them to the document outline.

4. File Changes Required
   
   4.1 extension.js:
       - Update regular expressions for new syntax features
       - Add new document symbol provider patterns
       - Update activation events
   
   4.2 syntaxes/txtdoc.tmLanguage.json:
       - Update patterns for new syntax features
       - Add new patterns for new features
   
   4.3 language-configuration.json:
       - Update configuration for new syntax features

5. Testing Strategy
   
   5.1 Create test files for each new feature:
       - Bold text test
       - Session types test
       - References test
       - Footnotes test
       - Metadata test
   
   5.2 Test edge cases:
       - Empty documents
       - Very large documents
       - Documents with invalid syntax